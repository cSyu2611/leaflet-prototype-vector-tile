{"remainingRequest":"/Users/syu/Private/datacradle/map-prototype-vector-tile/map-prototype-vector-tile-frontend/node_modules/babel-loader/lib/index.js!/Users/syu/Private/datacradle/map-prototype-vector-tile/map-prototype-vector-tile-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/syu/Private/datacradle/map-prototype-vector-tile/map-prototype-vector-tile-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/syu/Private/datacradle/map-prototype-vector-tile/map-prototype-vector-tile-frontend/src/components/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/syu/Private/datacradle/map-prototype-vector-tile/map-prototype-vector-tile-frontend/src/components/Map.vue","mtime":1579675829986},{"path":"/Users/syu/Private/datacradle/map-prototype-vector-tile/map-prototype-vector-tile-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/syu/Private/datacradle/map-prototype-vector-tile/map-prototype-vector-tile-frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/syu/Private/datacradle/map-prototype-vector-tile/map-prototype-vector-tile-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/syu/Private/datacradle/map-prototype-vector-tile/map-prototype-vector-tile-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEwgZnJvbSAnbGVhZmxldCc7CmltcG9ydCAibGVhZmxldC9kaXN0L2xlYWZsZXQuY3NzIjsKaW1wb3J0ICJsZWFmbGV0LnZlY3RvcmdyaWQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ01hcCcsCiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNsaWNrZWRUaWxlSWQ6IG51bGwKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5kcmF3TWFwKCk7CiAgICB0aGlzLnJlbmRlclNoYXBlKCk7CiAgfSwKICBjb21wdXRlZDogewogICAgc2hhcmVkU3RhdGU6IGZ1bmN0aW9uIHNoYXJlZFN0YXRlKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGU7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBkcmF3TWFwOiBmdW5jdGlvbiBkcmF3TWFwKCkgewogICAgICB2YXIgb3NtdGlsZSA9IEwudGlsZUxheWVyKCcvL3tzfS50aWxlLm9zbS5vcmcve3p9L3t4fS97eX0ucG5nJywgewogICAgICAgIHpJbmRleDogMSwKICAgICAgICBhdHRyaWJ1dGlvbjogJyZjb3B5OyA8YSBocmVmPSIvL29zbS5vcmcvY29weXJpZ2h0Ij5PcGVuU3RyZWV0TWFwPC9hPiBjb250cmlidXRvcnMnCiAgICAgIH0pOwogICAgICB2YXIgZ3Npc3RkdGlsZSA9IEwudGlsZUxheWVyKCdodHRwczovL2N5YmVyamFwYW5kYXRhLmdzaS5nby5qcC94eXovc3RkL3t6fS97eH0ve3l9LnBuZycsIHsKICAgICAgICB6SW5kZXg6IDEsCiAgICAgICAgYXR0cmlidXRpb246ICI8YSBocmVmPSdodHRwczovL21hcHMuZ3NpLmdvLmpwL2RldmVsb3BtZW50L2ljaGlyYW4uaHRtbCcgdGFyZ2V0PSdfYmxhbmsnPuWcsOeQhumZouOCv+OCpOODqzwvYT4iCiAgICAgIH0pOwogICAgICB2YXIgbWFwID0gTC5tYXAoJ21hcCcsIHsKICAgICAgICBjZW50ZXI6IFszNC41NCwgMTMzLjc0NV0sCiAgICAgICAgem9vbTogMTEsCiAgICAgICAgbGF5ZXJzOiBbb3NtdGlsZV0sCiAgICAgICAgem9vbUNvbnRyb2w6IGZhbHNlLAogICAgICAgIG1pblpvb206IDYsCiAgICAgICAgbWF4Wm9vbTogMTcsCiAgICAgICAgZ2VzdHVyZUhhbmRsaW5nOiB0cnVlLAogICAgICAgIHByZWZlckNhbnZhczogdHJ1ZSwKICAgICAgICBzY3JvbGxXaGVlbFpvb206IGZhbHNlCiAgICAgIH0pOwogICAgICBMLmNvbnRyb2wuem9vbSh7CiAgICAgICAgcG9zaXRpb246ICdib3R0b21yaWdodCcKICAgICAgfSkuYWRkVG8obWFwKTsKICAgICAgdmFyIG1hcE9iaiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKTsKICAgICAgbWFwT2JqLmFkZEV2ZW50TGlzdGVuZXIoImZvY3VzIiwgZnVuY3Rpb24gKCkgewogICAgICAgIG1hcC5zY3JvbGxXaGVlbFpvb20uZW5hYmxlKCk7CiAgICAgIH0pOwogICAgICBtYXBPYmouYWRkRXZlbnRMaXN0ZW5lcigiYmx1ciIsIGZ1bmN0aW9uICgpIHsKICAgICAgICBtYXAuc2Nyb2xsV2hlZWxab29tLmRpc2FibGUoKTsKICAgICAgfSk7CiAgICAgIEwuY29udHJvbC5zY2FsZSh7CiAgICAgICAgaW1wZXJpYWw6IGZhbHNlCiAgICAgIH0pLmFkZFRvKG1hcCk7CiAgICAgIEwuY29udHJvbC5sYXllcnMoewogICAgICAgICJPcGVuU3RyZWV0TWFwIjogb3NtdGlsZSwKICAgICAgICAi5Zu95Zyf5Zyw55CG6ZmiIC0g5qiZ5rqW5Zyw5ZuzIjogZ3Npc3RkdGlsZQogICAgICB9KS5hZGRUbyhtYXApOwogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldE1hcCcsIG1hcCk7CiAgICB9LAogICAgcmVuZGVyU2hhcGU6IGZ1bmN0aW9uIHJlbmRlclNoYXBlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHZlY3RvckxheWVyID0gTC52ZWN0b3JHcmlkLnByb3RvYnVmKCJodHRwOi8vbG9jYWxob3N0OjI2MTEvZGF0YS9rdXJhc2hpa2kve3p9L3t4fS97eX0ucGJmIiwgewogICAgICAgIHJlbmRlcmVyRmFjdG9yeTogTC5jYW52YXMudGlsZSwKICAgICAgICBnZXRGZWF0dXJlSWQ6IGZ1bmN0aW9uIGdldEZlYXR1cmVJZChmKSB7CiAgICAgICAgICByZXR1cm4gU3RyaW5nKGYucHJvcGVydGllc1siS0VZX0NPREUiXSk7IC8vIGNvbnNvbGUubG9nKGYpIC8vZXNsaW50LWRpc2FibGUtbGluZQogICAgICAgIH0sCiAgICAgICAgaW50ZXJhY3RpdmU6IHRydWUsCiAgICAgICAgdmVjdG9yVGlsZUxheWVyU3R5bGVzOiB7CiAgICAgICAgICAia3VyYXNoaWtpIjogdGhpcy5zaGFyZWRTdGF0ZS5pbml0aWFsVGlsZVN0eWxlCiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXRWZWN0b3JUaWxlSW5zdGFuY2UnLCB2ZWN0b3JMYXllcik7CiAgICAgIHZlY3RvckxheWVyLm9uKCJjbGljayIsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgX3RoaXMuY2xpY2tlZFRpbGVJZCA9IGUubGF5ZXIucHJvcGVydGllc1siS0VZX0NPREUiXTsgLy8gY29uc29sZS5sb2codGhpcy5jbGlja2VkVGlsZUlkKSAvL2VzbGludC1kaXNhYmxlLWxpbmUKCiAgICAgICAgdmVjdG9yTGF5ZXIuYmluZFBvcHVwKF90aGlzLmNsaWNrZWRUaWxlSWQpOwogICAgICB9KTsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRMYXllcicsIHZlY3RvckxheWVyKTsKICAgIH0sCiAgICBzZXRGZWF0dXJlU3R5bGVBc3luYzogZnVuY3Rpb24gc2V0RmVhdHVyZVN0eWxlQXN5bmMobmV3dmFsLCBvbGR2YWwpIHsKICAgICAgaWYgKG9sZHZhbCkgewogICAgICAgIHRoaXMuc2hhcmVkU3RhdGUudmVjdG9yVGlsZUluc3RhbmNlLnNldEZlYXR1cmVTdHlsZShvbGR2YWwsIHRoaXMuc2hhcmVkU3RhdGUuaW5pdGlhbFRpbGVTdHlsZSk7CiAgICAgIH0KCiAgICAgIHRoaXMuc2hhcmVkU3RhdGUudmVjdG9yVGlsZUluc3RhbmNlLnNldEZlYXR1cmVTdHlsZShuZXd2YWwsIHsKICAgICAgICBmaWxsOiB0cnVlLAogICAgICAgIGZpbGxDb2xvcjogInJlZCIsCiAgICAgICAgY29sb3I6ICJncmVlbiIKICAgICAgfSk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgY2xpY2tlZFRpbGVJZDogZnVuY3Rpb24gY2xpY2tlZFRpbGVJZChuZXd2YWwsIG9sZHZhbCkgewogICAgICB0aGlzLnNldEZlYXR1cmVTdHlsZUFzeW5jKG5ld3ZhbCwgb2xkdmFsKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <section class=\"container\">\n        <div id=\"map\"></div>\n    </section>\n\n</template>\n\n<script>\n    import L from 'leaflet'\n    import \"leaflet/dist/leaflet.css\"\n    import \"leaflet.vectorgrid\"\n\n    export default {\n        name: 'Map',\n        components:{},\n        data () {\n            return {\n                clickedTileId: null,\n            }\n        },\n        mounted () {\n            this.drawMap()\n            this.renderShape()\n        },\n        computed: {\n            sharedState () {\n                return this.$store.state\n            },\n        },\n        methods: {\n            drawMap () {\n                const osmtile = L.tileLayer('//{s}.tile.osm.org/{z}/{x}/{y}.png', {\n                    zIndex: 1,\n                    attribution: '&copy; <a href=\"//osm.org/copyright\">OpenStreetMap</a> contributors'\n                })\n                const gsistdtile = L.tileLayer('https://cyberjapandata.gsi.go.jp/xyz/std/{z}/{x}/{y}.png', {\n                    zIndex: 1,\n                    attribution: \"<a href='https://maps.gsi.go.jp/development/ichiran.html' target='_blank'>地理院タイル</a>\"\n                })\n                const map = L.map('map', { \n                    center: [34.54, 133.745],\n                    zoom: 11,\n                    layers: [osmtile],\n                    zoomControl: false,\n                    minZoom: 6,\n                    maxZoom: 17,\n                    gestureHandling: true,\n                    preferCanvas: true,\n                    scrollWheelZoom: false\n                })\n                L.control.zoom({ position: 'bottomright' }).addTo(map)\n                const mapObj = document.getElementById('map')\n                mapObj.addEventListener(\"focus\", () => {map.scrollWheelZoom.enable()});\n                mapObj.addEventListener(\"blur\", () => {map.scrollWheelZoom.disable()});\n\n                L.control.scale({imperial:false}).addTo(map)\n\n                L.control.layers({\n                  \"OpenStreetMap\": osmtile,\n                  \"国土地理院 - 標準地図\": gsistdtile,\n                }).addTo(map)\n                this.$store.commit('setMap', map)\n            },\n            renderShape () {\n                const vectorLayer = L.vectorGrid.protobuf(\"http://localhost:2611/data/kurashiki/{z}/{x}/{y}.pbf\", {\n                    rendererFactory: L.canvas.tile,\n                    getFeatureId: function(f){\n\n                        return String(f.properties[\"KEY_CODE\"])\n                        // console.log(f) //eslint-disable-line\n                    },\n                    interactive: true,\n                    vectorTileLayerStyles:{\n                        \"kurashiki\":this.sharedState.initialTileStyle\n                    },\n\n                });\n                this.$store.commit('setVectorTileInstance',vectorLayer)\n                vectorLayer.on(\"click\", (e)=>{\n                    this.clickedTileId = e.layer.properties[\"KEY_CODE\"];\n                    // console.log(this.clickedTileId) //eslint-disable-line\n                    vectorLayer.bindPopup(this.clickedTileId)\n                });\n                    \n                \n                this.$store.commit('addLayer', vectorLayer)  \n\n            },\n            setFeatureStyleAsync(newval,oldval){\n                if(oldval){\n                    this.sharedState.vectorTileInstance.setFeatureStyle(oldval,this.sharedState.initialTileStyle)\n                }\n                this.sharedState.vectorTileInstance.setFeatureStyle(newval,{\n                    fill:true,\n                    fillColor: \"red\",\n                    color: \"green\"\n                })\n            },\n\n        },\n        watch: {\n            clickedTileId: function(newval,oldval){\n                this.setFeatureStyleAsync(newval,oldval)\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n#map {\n  height: 500px;\n  width: 800px;\n  margin: auto;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}